
/* Base styles */
.waiting_main_token{
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-left: 53%;
  margin-top: -19%;
  padding: 10px;
  height: 200px;
  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
  border-radius: 10px;
  width: 47%;
}

.waiting_main_token h3{
  font-family: 'Arial', sans-serif;
  color: #333;
  font-size: 18px;
  font-weight: bold;
  text-align: center;
  margin-bottom: 20px;
  display: inline-block;
  border-bottom: 3px solid;
  border-image: linear-gradient(to right, #ff7e5f, #e2d0c1);
  border-image-slice: 1;
}

.waiting_token{
  border-radius: 10px;
  height: 80%;
  width: 90%;
  margin-top: -10px;
  padding: 10px;
  box-shadow: 0px 1px 1px rgba(9, 30, 66, 0.25), 0px 0px 1px 1px rgba(9, 30, 66, 0.13);
}

.waiting_token p{
  font-size: 18px;
  font-weight: bold;
  color: #0d1b2a;
}

.waiting_token p span{
 margin-left: 2px;
}

.waiting_token .Skip_btn{
  background: linear-gradient(to bottom, #7a9daf, #415a77);
  color: white;
  font-size: 16px;
  padding: 5px;
  margin-left: 40%;
  text-align: center;
  margin-top: 5px;
  font-weight: bold;
  width: 100px;
  border-radius: 5px;
  cursor: pointer;
}

.waiting_token .Skip_btn:hover{
  background: linear-gradient(to bottom, #7a9daf, #617d9c);
}

/* Tablet view */
@media (max-width: 768px) {
  .waiting_main_token{
    margin-left: 0;
    width: 100%;
    margin-top: 1%;
  }

  .main_queue_css{
    width: 100%;
  }
  
  .waiting_token .Skip_btn{
    margin-left: 42%;
  }
}

/* Mobile view */
@media (max-width: 480px) {
  .waiting_main_token{
    margin-left: 0;
    width: 100%;
    padding: 15px;
    height: auto;
  }

  .waiting_main_token h3{
    font-size: 16px;
    margin-bottom: 15px;
  }

  .waiting_token{
    height: auto;
    width: 100%;
    padding: 15px;
  }

  .waiting_token p{
    font-size: 16px;
  }

  .waiting_token .Skip_btn{
    font-size: 14px;
    width: 80px;
    margin-left: 39%;
  }
}

<div className="Queue_logo">
          <h2>Softcron Technology</h2>
          <div className="show_queue">
            {currentToken && (
              <div key={currentToken.token_no}>
                <h2>Current Serving</h2>
                <p>
                  Queue no: <span>{currentToken.token_no}</span>
                </p>
                <p>
                  Name: <span>{currentToken.Customer_name}</span>
                </p>
                <p>
                  Mobile no: <span>{currentToken.Customer_mobile}</span>
                </p>
              </div>
            )}
          </div>
        </div>



        queue.map((item, index) => (
          <div className={`draggable-item col-xl-8 col-lg-8 ${draggedItemIndex === index ? 'dragging' : ''} ${item.transition ? 'drop-transition' : ''}`} key={item.token_no?.toString()}>
            <div className="card l-bg-blue-dark">
              <div className="card-statistic-3 p-4">
                <div className="card-icon card-icon-large"><i className="fas fa-users" /></div>
                <div className="mb-4">
                  <h5 className="card-title fs-4 mb-0 text-white">Current Waiting token</h5>
                </div>
                <div className='d-flex w-full justify-content-between'>
                  <div className="d-flex flex-column w-full bg-red-900">
                    <h2 className="d-flex align-items-center text-white mb-0">
                      Token No.  &nbsp;
                    </h2>
                    <h2 className="d-flex align-items-center text-white mb-0">
                      Customer Name  &nbsp;
                    </h2>
                    <h2 className="d-flex align-items-center text-white mb-0">
                      Customer Mobile  &nbsp;
                    </h2>
                  </div>
                  <div>{waitingToken && (
                    <div className="row align-items-center mb-1 d-flex">
                      <div className="col-12">
                        <h2 className="d-flex align-items-center text-white mb-0">
                          : &nbsp;{waitingToken.token_no}
                        </h2>
                      </div>
                      <div className="col-12">
                        <h2 className="d-flex align-items-center text-white mb-0">
                          : &nbsp;{waitingToken.customer_name}
                        </h2>
                      </div>
                      <div className="col-12">
                        <h2 className="d-flex align-items-center text-white mb-0">
                          : &nbsp;{waitingToken.customer_mobile}
                        </h2>
                      </div>
                    </div>
                  )}</div>
                </div>
              </div>
            </div>
          </div>
        ))

          queue.map((item, index) => (
            <div
              key={item.token_no?.toString()} // Safely access token_no
              className={`draggable-item col-xl-8 col-lg-8 ${draggedItemIndex === index ? 'dragging' : ''} ${item.transition ? 'drop-transition' : ''}`}
              draggable
              onDragStart={(e) => handleDragStart(e, index)}
              onDrag={(e) => handleDrag(e)}
              onDragEnd={handleDragEnd}
              onDragOver={(e) => e.preventDefault()}
              onDrop={(e) => handleDrop(e, index)}
            >
              <p>Queue No:<span>{item.token_no}</span></p>
              <p>Name:<span>{item.customer_name}</span></p>
              <p>Mobile:<span>{item.customer_mobile}</span></p>
              <div className='skip_btn' onClick={() => handleSkipBtn(item.token_no)}>Skip</div>
            </div>
          ))